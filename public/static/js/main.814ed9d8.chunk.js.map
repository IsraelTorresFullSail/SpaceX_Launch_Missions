{"version":3,"sources":["logo.png","components/LaunchItem.jsx","components/MissionKey.jsx","components/Launches.jsx","components/Launch.jsx","App.js","reportWebVitals.js","index.js"],"names":["LaunchItem","launch","flight_number","mission_name","launch_date_local","launch_success","className","classNames","format","to","MissionKey","LAUNCHES_QUERY","gql","Lauches","useQuery","loading","error","data","console","log","launches","map","LAUNCH_QUERY","Launch","match","params","parseInt","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","client","ApolloClient","uri","cache","InMemoryCache","App","src","logo","alt","style","width","display","margin","exact","path","component","Launches","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.814ed9d8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.91169fa6.png\";","import React from 'react'\nimport classNames from 'classnames'\nimport Moment from 'react-moment'\nimport { Link } from 'react-router-dom'\n\nconst LaunchItem = ({\n  launch: { flight_number, mission_name, launch_date_local, launch_success },\n}) => {\n  return (\n    <div className='card card-body mb-3'>\n      <div className='row'>\n        <div className='col-md-9'>\n          <h4>\n            Mission:{' '}\n            <span\n              className={classNames({\n                'text-success': launch_success,\n                'text-danger': !launch_success,\n              })}\n            >\n              {mission_name}\n            </span>\n          </h4>\n          <p>\n            Date: <Moment format='YYYY-MM-DD HH:mm'>{launch_date_local}</Moment>\n          </p>\n        </div>\n        <div className='col-md-3'>\n          <Link to={`/launch/${flight_number}`} className='btn btn-secondary'>\n            Launch Details\n          </Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default LaunchItem\n","import React from 'react'\n\nconst MissionKey = () => {\n  return (\n    <div className='my-3'>\n      <p>\n        <span className='px-3 mr-2 bg-success' /> = Success\n      </p>\n      <p>\n        <span className='px-3 mr-2 bg-danger' /> = Fail\n      </p>\n    </div>\n  )\n}\n\nexport default MissionKey\n","import React from 'react'\nimport { useQuery, gql } from '@apollo/client'\n\nimport LaunchItem from './LaunchItem'\nimport MissionKey from './MissionKey'\n\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_date_local\n      launch_success\n    }\n  }\n`\n\nconst Lauches = () => {\n  const { loading, error, data } = useQuery(LAUNCHES_QUERY)\n  return (\n    <>\n      <h1 className='display-4 my-3'>Launches</h1>\n      <MissionKey />\n      {loading ? (\n        <h4>Loading...</h4>\n      ) : error ? (\n        console.log(error)\n      ) : (\n        <>\n          {data.launches.map((launch) => (\n            <LaunchItem key={launch.flight_number} launch={launch} />\n          ))}\n        </>\n      )}\n    </>\n  )\n}\n\nexport default Lauches\n","import React from 'react'\nimport { useQuery, gql } from '@apollo/client'\nimport { Link } from 'react-router-dom'\nimport classNames from 'classnames'\n\nconst LAUNCH_QUERY = gql`\n  query LaunchQuery($flight_number: Int!) {\n    launch(flight_number: $flight_number) {\n      flight_number\n      mission_name\n      launch_year\n      launch_success\n      launch_date_local\n      rocket {\n        rocket_id\n        rocket_name\n        rocket_type\n      }\n    }\n  }\n`\n\nconst Launch = ({ match }) => {\n  let { flight_number } = match.params\n  flight_number = parseInt(flight_number)\n  const { loading, error, data } = useQuery(LAUNCH_QUERY, {\n    variables: { flight_number },\n  })\n\n  return (\n    <>\n      <h1 className='display-4 my-3'>Launch</h1>\n      {loading ? (\n        <h4>Loading...</h4>\n      ) : error ? (\n        console.log(error)\n      ) : (\n        <div>\n          <h3 className='my-3'>\n            <span className='text-dark'>Mission:</span>{' '}\n            {data.launch.mission_name}\n          </h3>\n          <h4 className='mb-3'>Details</h4>\n          <ul className='list-group'>\n            <li className='list-group-item'>\n              Flight Number: {data.launch.flight_number}\n            </li>\n            <li className='list-group-item'>\n              Launch Year: {data.launch.launch_year}\n            </li>\n            <li className='list-group-item'>\n              Launch Successful:{' '}\n              <span\n                className={classNames({\n                  'text-success': data.launch.launch_success,\n                  'text-danger': !data.launch.launch_success,\n                })}\n              >\n                {data.launch.launch_success ? 'Yes' : 'No'}\n              </span>\n            </li>\n          </ul>\n          <h4 className='my-3'>Rocket Details</h4>\n          <ul className='list-group'>\n            <li className='list-group-item'>\n              Rocket ID: {data.launch.rocket.rocket_id}\n            </li>\n            <li className='list-group-item'>\n              Rocket Name: {data.launch.rocket.rocket_name}\n            </li>\n            <li className='list-group-item'>\n              Rocket Type: {data.launch.rocket.rocket_type}\n            </li>\n          </ul>\n          <hr />\n          <Link to='/' className='btn btn-secondary'>\n            Back\n          </Link>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default Launch\n","import './App.css'\nimport logo from './logo.png'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { ApolloClient, InMemoryCache } from '@apollo/client'\nimport { ApolloProvider } from '@apollo/client/react'\n\nimport Launches from './components/Launches'\nimport Launch from './components/Launch'\n\nconst client = new ApolloClient({\n  uri: '/graphql',\n  cache: new InMemoryCache(),\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className='container'>\n          <img\n            src={logo}\n            alt='SpaceX'\n            style={{ width: 300, display: 'block', margin: '0 auto 50px auto' }}\n          />\n          <Route exact path='/' component={Launches} />\n          <Route exact path='/launch/:flight_number' component={Launch} />\n        </div>\n      </Router>\n    </ApolloProvider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}